{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/alert/alert.component.css","webpack:///./src/app/alert/alert.component.html","webpack:///./src/app/alert/alert.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/constants/index.ts","webpack:///./src/app/detail/detail.component.css","webpack:///./src/app/detail/detail.component.html","webpack:///./src/app/detail/detail.component.ts","webpack:///./src/app/form-people/form-people.component.css","webpack:///./src/app/form-people/form-people.component.html","webpack:///./src/app/form-people/form-people.component.ts","webpack:///./src/app/interceptor/jwtInterceptor.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/services/alerts.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/persons.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (localStorage.getItem('token')) {\n      return true;\n    }\n\n    this.router.navigate(['/login'], {});\n    return false;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-10\\\">\\n\\n    <button type=\\\"button\\\" routerLink=\\\"/form-people\\\" style=\\\"margin-left: -10px;\\\" class=\\\"btn btn-info mb-4\\\">Add persons</button>\\n\\n    <table class=\\\"table admin-table\\\">\\n      <thead class=\\\"thead-dark\\\">\\n        <tr class=\\\"row\\\">\\n          <th class=\\\"col-3\\\">Email</th>\\n          <th class=\\\"col-2\\\"> First name</th>\\n          <th class=\\\"col-2\\\"> Last name</th>\\n          <th class=\\\"col-2\\\">Address</th>\\n          <th class=\\\"col-1\\\">Enabled</th>\\n          <th class=\\\"col-2\\\">Actions</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr class=\\\"row\\\" *ngFor=\\\"let person of persons\\\">\\n          <td class=\\\"col-3 d-inline-block text-truncate\\\"> {{person.email}} </td>\\n          <td class=\\\"col-2 d-inline-block text-truncate\\\">{{person.first_name}}</td>\\n          <td class=\\\"col-2 d-inline-block text-truncate\\\"> {{person.last_name}}</td>\\n          <td class=\\\"col-2 d-inline-block text-truncate\\\"> {{person.address}}</td>\\n          <td class=\\\"col-1 d-inline-block text-truncate\\\">{{person.enabled}}</td>\\n          <td class=\\\"col-2 d-inline-block text-truncate\\\">\\n            <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n              <button type=\\\"button\\\" routerLink=\\\"/detail/{{person.id}}\\\" class=\\\"btn btn-outline-primary\\\">\\n                <i class=\\\"fas fa-eye\\\"></i>\\n              </button>\\n              <button type=\\\"button\\\" routerLink=\\\"/update/{{person.id}}\\\" class=\\\"btn btn-outline-primary\\\">\\n                <i class=\\\"fas fa-pencil-alt\\\"></i>\\n              </button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"deletePerson(person)\\\">\\n                <i class=\\\"fas fa-trash-alt\\\"></i>\\n              </button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"togglePerson(person)\\\">\\n                <i class=\\\"fas fa-check-square\\\" *ngIf=\\\"person.enabled\\\" ></i>\\n                <i class=\\\"far fa-square regular\\\" *ngIf=\\\"!person.enabled\\\" ></i>\\n              </button>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PersonsService } from '../services/persons.service';\nimport { PersonsInterface } from '../interfaces/persons';\nimport { AlertsService } from '../services/alerts.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  public persons: any;\n\n  constructor(private personsService: PersonsService, private alertService: AlertsService) {\n    this.searchPeople();\n  }\n\n  togglePerson(person: PersonsInterface) {\n    if (person.enabled) {\n      this.desactivatePeople(person);\n    } else {\n      this.enablePerson(person);\n    }\n  }\n\n  desactivatePeople(person: PersonsInterface) {\n    this.personsService.activatePerson(person.id)\n      .subscribe(result => {\n        person.enabled = false;\n      }, this.handleError.bind(this));\n  }\n\n  enablePerson(person: PersonsInterface) {\n    this.personsService.enablePerson(person.id)\n      .subscribe(result => {\n        person.enabled = true;\n      }, this.handleError.bind(this));\n  }\n\n  deletePerson(person: PersonsInterface) {\n    this.personsService.deletePerson(person.id)\n      .subscribe(result => {\n        this.searchPeople();\n      }, this.handleError.bind(this));\n  }\n\n  searchPeople() {\n    this.personsService.getPersons()\n      .subscribe((persons: PersonsInterface) => {\n        this.persons = persons;\n      });\n  }\n\n  handleError(response) {\n    if (response.error && response.error.error) {\n      this.alertService.sendMessage(response.error.reason, 'alert-danger');\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"alert\\\" [ngClass]=\\\"alertClass\\\" role=\\\"alert\\\">\\n  {{alertMsg}}\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AlertsService } from '../services/alerts.service';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css']\n})\nexport class AlertComponent implements OnInit {\n  alertMsg: string;\n  alertClass: string;\n\n  constructor(private alertService: AlertsService) {\n    this.alertService.getMessage().subscribe(msg => {\n      this.alertMsg = msg.text;\n      this.alertClass = msg.errorClass;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/index\\\">Persons</a>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/index\\\">List Persons</a>\\n      </li>\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/form-people\\\">Add Persons</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n<app-alert></app-alert>\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row justify-content-md-center\\\">\\n      <div class=\\\"offset-md-1 col-md-10 p-4\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor() {  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { PersonsService } from './services/persons.service';\nimport { AuthService } from './services/auth.service';\nimport { AlertsService } from './services/alerts.service';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { routing } from './routes';\nimport { JwtInterceptor } from './interceptor/jwtInterceptor';\nimport { FormPeopleComponent } from './form-people/form-people.component';\nimport { AlertComponent } from './alert/alert.component';\nimport { DetailComponent } from './detail/detail.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    AdminComponent,\n    FormPeopleComponent,\n    AlertComponent,\n    DetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    routing,\n    ReactiveFormsModule\n  ],\n  providers: [\n    AlertsService,\n    PersonsService,\n    AuthService,\n    AuthGuard,\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export const URL_SERVER = 'api/';\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-10\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{person.email}} \\n          <span class=\\\"badge badge-secondary badge-success\\\" *ngIf=\\\"person.enabled\\\">enabled</span> \\n          <span class=\\\"badge badge-secondary badge-danger\\\" *ngIf=\\\"!person.enabled\\\">disabled</span> \\n        \\n        </h5>\\n        <h6 class=\\\"card-subtitle mb-2 text-muted\\\">{{person.gender}}</h6>\\n        <p class=\\\"card-text\\\">{{person.first_name}} {{person.last_name}}</p>\\n        <p class=\\\"card-text\\\">{{person.address}}</p>\\n        \\n        <a class=\\\"btn btn-primary\\\" routerLink=\\\"/index\\\">Return to list</a>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PersonsService } from '../services/persons.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { PersonsInterface } from '../interfaces/persons';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.css']\n})\nexport class DetailComponent implements OnInit {\n  public person: PersonsInterface;\n\n  constructor(private personsService: PersonsService, private activeRoute: ActivatedRoute) {\n    const routeParams = this.activeRoute.snapshot.params;\n    this.personsService.getPersonById(routeParams.id)\n      .subscribe((person: PersonsInterface) => {\n        this.person = person;\n      });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"offset-3 col-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"formPeople\\\" (ngSubmit)=\\\"save()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Email address</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" formControlName=\\\"email\\\" placeholder=\\\"Enter your email\\\">\\n            <div *ngIf=\\\"formSubmited && formPeople.controls.email.errors && formPeople.controls.email.errors.required\\\">\\n              <div class=\\\"alert alert-danger mt-3\\\" role=\\\"alert\\\">\\n                Email is required\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"input-group mt-3\\\">\\n            <div class=\\\"input-group\\\">\\n              <button class=\\\"btn btn-outline-secondary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                {{formControl.gender.value || 'Gender'}}\\n              </button>\\n              <div class=\\\"dropdown-menu\\\">\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"setGender('male')\\\">Male</a>\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"setGender('female')\\\">Female</a>\\n              </div>\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"formSubmited && formPeople.controls.gender.errors && formPeople.controls.gender.errors.required\\\">\\n            <div class=\\\"alert alert-danger mt-3\\\" role=\\\"alert\\\">\\n              Gender is required\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">First name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" formControlName=\\\"firstName\\\" placeholder=\\\"Enter your firstName\\\">\\n            <div *ngIf=\\\"formSubmited && formPeople.controls.firstName.errors && formPeople.controls.firstName.errors.required\\\">\\n              <div class=\\\"alert alert-danger mt-3\\\" role=\\\"alert\\\">\\n                First name is required\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Last name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" formControlName=\\\"lastName\\\" placeholder=\\\"Enter your lastName\\\">\\n            <div *ngIf=\\\"formSubmited && formPeople.controls.lastName.errors && formPeople.controls.lastName.errors.required\\\">\\n              <div class=\\\"alert alert-danger mt-3\\\" role=\\\"alert\\\">\\n                Last name is required\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Address</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"address\\\" formControlName=\\\"address\\\" placeholder=\\\"Enter your address\\\">\\n            <div *ngIf=\\\"formSubmited && formPeople.controls.address.errors && formPeople.controls.address.errors.required\\\">\\n              <div class=\\\"alert alert-danger mt-3\\\" role=\\\"alert\\\">\\n                Address is required\\n              </div>\\n            </div>\\n          </div>\\n\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AlertsService } from '../services/alerts.service';\nimport { PersonsService } from '../services/persons.service';\nimport { PersonsInterface } from '../interfaces/persons';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-form-people',\n  templateUrl: './form-people.component.html',\n  styleUrls: ['./form-people.component.css']\n})\nexport class FormPeopleComponent implements OnInit {\n  formPeople: FormGroup;\n  formSubmited = false;\n  formWithErrors = false;\n  isUpdating = false;\n  person: PersonsInterface;\n\n  constructor(private formBuilder: FormBuilder, private alertService: AlertsService,\n    private personsService: PersonsService, private router: Router, private activeRoute: ActivatedRoute) {\n    const routeParams = this.activeRoute.snapshot.params;\n    this.formPeople = this.formBuilder.group({\n      gender: ['', Validators.required],\n      email: ['', Validators.required],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      address: ['', Validators.required]\n    });\n\n    if (routeParams.id) {\n      this.isUpdating = true;\n      this.getPeople(routeParams.id);\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  get formControl() { return this.formPeople.controls; }\n\n\n  save() {\n    this.formSubmited = true;\n    if (this.formPeople.invalid) {\n      return;\n    }\n\n    const personsForm = this.prepareForm();\n    if (this.isUpdating) {\n      this.updatePeople(personsForm);\n    } else {\n      this.savePeople(personsForm);\n    }\n  }\n\n  updatePeople(personsForm) {\n    this.personsService.updatePeople(this.person.id, personsForm)\n      .subscribe(\n        user => {\n          this.alertService.sendMessage('Person updated correctly', 'alert-success');\n          this.router.navigate(['index']);\n        },\n        this.handleError.bind(this)\n      );\n  }\n\n  savePeople(personsForm) {\n    this.personsService.savePersons(personsForm)\n      .subscribe(\n        user => {\n          this.alertService.sendMessage('Person save correctly', 'alert-success');\n          this.router.navigate(['index']);\n        },\n        this.handleError.bind(this)\n      );\n  }\n\n  prepareForm(): PersonsInterface {\n    return {\n      gender: this.formControl.gender.value,\n      enabled: true,\n      first_name: this.formControl.firstName.value,\n      last_name: this.formControl.lastName.value,\n      email: this.formControl.email.value,\n      address: this.formControl.address.value\n    };\n  }\n\n  handleError(response) {\n    if (response.error && response.error.error) {\n      this.alertService.sendMessage(response.error.reason, 'alert-danger');\n    }\n    this.formWithErrors = true;\n  }\n\n  setGender(gender) {\n    this.formControl.gender.patchValue(gender);\n  }\n\n  getPeople(id: PersonsInterface['id']) {\n    this.personsService.getPersonById(id)\n      .subscribe((person: PersonsInterface) => {\n        this.person = person;\n        this.setPersonForUpdate(person);\n      });\n  }\n\n  setPersonForUpdate(person: PersonsInterface) {\n    this.formControl.firstName.patchValue(person.first_name);\n    this.formControl.lastName.patchValue(person.last_name);\n    this.formControl.email.patchValue(person.email);\n    this.formControl.gender.patchValue(person.gender);\n    this.formControl.address.patchValue(person.address);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token = localStorage.getItem('token');\n    if (token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"offset-3 col-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Email address</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" formControlName=\\\"email\\\" placeholder=\\\"Enter email\\\">\\n            <div *ngIf=\\\"formSubmited && loginForm.controls.email.errors && loginForm.controls.email.errors.required\\\">\\n              <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n                Email is required\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\n            <div *ngIf=\\\"formSubmited && loginForm.controls.email.errors && loginForm.controls.email.errors.required\\\">\\n              <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n                Password is required\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"formSubmited && formWithErrors\\\">\\n              <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n                Username or password are incorrect.\\n              </div>\\n            </div>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  formSubmited = false;\n  formWithErrors = false;\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthService, private router: Router) {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    this.authService.clearStorage();\n  }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.formSubmited = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    const formData = {\n      username: this.loginForm.controls.email.value,\n      password: this.loginForm.controls.password.value\n    };\n\n    this.authService.login(formData, )\n      .subscribe(\n        user => {\n          console.log(user);\n          this.router.navigate(['index']);\n        },\n        error => {\n          console.error(error);\n          this.formWithErrors = true;\n        }\n      );\n  }\n}\n","import { Routes, RouterModule } from '@angular/router';\n\n// import { HomeComponent } from './home';\nimport { LoginComponent } from './login/login.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { FormPeopleComponent } from './form-people/form-people.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { DetailComponent } from './detail/detail.component';\n\nconst appRoutes: Routes = [\n  // { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: 'index', component: AdminComponent, canActivate: [AuthGuard]},\n  { path: 'form-people', component: FormPeopleComponent, canActivate: [AuthGuard]},\n  { path: 'detail/:id', component: DetailComponent, canActivate: [AuthGuard]},\n  { path: 'update/:id', component: FormPeopleComponent, canActivate: [AuthGuard]},\n\n  // otherwise redirect to home\n  { path: '**', redirectTo: 'login' }\n];\n\nexport const routing = RouterModule.forRoot(appRoutes);\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { ValidationErrors } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertsService {\n  private subject = new Subject<any>();\n  constructor() {}\n\n  sendMessage(message: string | ValidationErrors, errorClass: string = 'alert-success') {\n    this.subject.next({ text: message, errorClass });\n    setTimeout(() => {\n      this.clearMessage();\n    }, 3000);\n  }\n\n  clearMessage() {\n    this.subject.next({});\n  }\n\n  getMessage(): Observable<any> {\n    return this.subject;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { URL_SERVER } from '../constants';\nimport { LoginFormInterface } from '../interfaces/login-form';\nimport { LoginResponse } from '../interfaces/login-response';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n  constructor(private http: HttpClient) {}\n\n  login(params: LoginFormInterface) {\n    return this.http.post(URL_SERVER + 'auth/login', params)\n      .pipe(map((user: LoginResponse) => {\n        if (user && user.access_token) {\n          localStorage.setItem('token', user.access_token);\n          localStorage.setItem('userName', user.user.name);\n        }\n        return user;\n      }\n    ));\n  }\n\n  clearStorage() {\n    localStorage.setItem('token', '');\n    localStorage.setItem('userName', '');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { URL_SERVER } from '../constants';\nimport { PersonsInterface } from '../interfaces/persons';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PersonsService {\n  constructor(private http: HttpClient) {\n  }\n\n\n  getPersons() {\n    return this.http.get(URL_SERVER + 'persons');\n  }\n\n  savePersons(people: PersonsInterface) {\n    return this.http.post(URL_SERVER + 'persons', people);\n  }\n\n  activatePerson(id: PersonsInterface['id']) {\n    return this.http.post(URL_SERVER + `persons/${id}/deactivate`, {});\n  }\n\n  enablePerson(id: PersonsInterface['id']) {\n    return this.http.post(URL_SERVER + `persons/${id}/activate`, {});\n  }\n\n  getPersonById(id: PersonsInterface['id']) {\n    return this.http.get(URL_SERVER + `persons/${id}`, {});\n  }\n\n  deletePerson(id: PersonsInterface['id']) {\n    return this.http.delete(URL_SERVER + `persons/${id}`, {});\n  }\n\n  updatePeople(id: PersonsInterface['id'], people: PersonsInterface) {\n    return this.http.put(URL_SERVER + `persons/${id}`, people);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}